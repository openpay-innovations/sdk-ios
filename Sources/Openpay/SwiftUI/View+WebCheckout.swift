//
//  View+WebCheckout.swift
//  Openpay
//
//  Created by june chen on 3/3/21.
//  Copyright Â© 2021 Openpay. All rights reserved.
//

import Foundation
import SwiftUI

public extension View {

    /// Present an Openpay Web Checkout View as the content of a sheet and load the checkout URL generated by the provided checkout item.
    /// - The checkout item has the transaction token and handover URL which are used to generate the checkout URL. The transaction token and handover URL are generated via the /orders endpoint on the Openpay backend.
    /// - Parameters:
    ///   - checkoutItem: A binding to an optional source of truth for the Openpay Web Checkout View as the content of the sheet.
    ///    When representing a non-nil checkout item, it creates a sheet representation of the Openpay Web Checkout View. If the checkout item changes, the system dismisses a currently-presented sheet and replaces it with a new sheet.
    ///   - completion: The block executed after the user has completed the checkout.
    func openpayWebCheckoutView(checkoutItem: Binding<CheckoutItem?>, completion: @escaping (_ result: WebCheckoutResult) -> Void) -> some View {
        return sheet(item: checkoutItem) { item -> WebCheckoutView in
            WebCheckoutView(
                transactionToken: item.transactionToken,
                handoverURL: item.handoverURL,
                completion: completion
            )
        }
    }
}

public struct CheckoutItem: Identifiable {
    public var id: String
    let transactionToken: String
    let handoverURL: URL

    public init(transactionToken: String, handoverURL: URL) {
        id = transactionToken
        self.transactionToken = transactionToken
        self.handoverURL = handoverURL
    }
}
